  $ ocaml-bindgen struct.h struct
  $ cat dune
  
  ; automatically generated by ocaml-bindgen 0.0.1
  (library
   (name struct)
   (foreign_stubs
    (language c)
    (names caml_struct.c)
    (flags
     (:standard -O2))))
  
  $ cat struct.h
  typedef struct Doggo {
      int many;
      char wow;
  } Doggo;
  
  void eleven_out_of_ten_majestic_af(Doggo* pupper);
  $ cat struct.ml
  (* automatically generated by ocaml-bindgen 0.0.1 *)
  type nonrec doggo = {
    many: int ;
    wow: char }
  external eleven_out_of_ten_majestic_af :
    pupper:doggo ptr -> unit = "caml_eleven_out_of_ten_majestic_af"
  $ cat caml_struct.c
  /* automatically generated by ocaml-bindgen 0.0.1 */
  Doggo* caml_Doggo_of_value(struct value* caml_x) {
    Doggo* x = malloc(sizeof(struct Doggo));
    x.many = Val_int(Field(0, caml_x));
    x.wow = Val_int(Field(1, caml_x));
    CAMLreturn(caml_x)
  }
  
  value caml_Doggo_to_value(struct Doggo* x) {
    CAMLparam0();
    CAMLlocal1(caml_x);
    caml_x = caml_alloc_tuple(2);
    Store_field(caml_x, 0, Val_int(x->many));
    Store_field(caml_x, 1, Val_int(x->wow));
    CAMLreturn(caml_x)
  }
  
  
