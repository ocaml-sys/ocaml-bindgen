  $ ocaml-bindgen libsql.h libsql
  $ cat dune
  
  ; automatically generated by ocaml-bindgen 0.0.1
  (library
   (name libsql)
   (foreign_stubs
    (language c)
    (names caml_libsql.c)
    (flags
     (:standard -O2))))
  
  $ cat libsql.ml
  (* automatically generated by ocaml-bindgen 0.0.1 *)
  type nonrec libsql_connection
  type nonrec libsql_database
  type nonrec libsql_row
  type nonrec libsql_rows
  type nonrec libsql_rows_future
  type nonrec libsql_stmt
  $ cat caml_libsql.c
  /* automatically generated by ocaml-bindgen 0.0.1 */
  libsql_connection* caml_libsql_connection_of_value(struct value* caml_x) {
    libsql_connection* x = malloc(sizeof(struct libsql_connection));
    caml_x = caml_alloc_tuple(0);
    CAMLreturn(caml_x)
  }
  
  value caml_libsql_connection_to_value(struct libsql_connection* x) {
    CAMLparam0();
    CAMLlocal1(caml_x);
    caml_x = caml_alloc_tuple(0);
    CAMLreturn(caml_x)
  }
  
  libsql_database* caml_libsql_database_of_value(struct value* caml_x) {
    libsql_database* x = malloc(sizeof(struct libsql_database));
    caml_x = caml_alloc_tuple(0);
    CAMLreturn(caml_x)
  }
  
  value caml_libsql_database_to_value(struct libsql_database* x) {
    CAMLparam0();
    CAMLlocal1(caml_x);
    caml_x = caml_alloc_tuple(0);
    CAMLreturn(caml_x)
  }
  
  libsql_row* caml_libsql_row_of_value(struct value* caml_x) {
    libsql_row* x = malloc(sizeof(struct libsql_row));
    caml_x = caml_alloc_tuple(0);
    CAMLreturn(caml_x)
  }
  
  value caml_libsql_row_to_value(struct libsql_row* x) {
    CAMLparam0();
    CAMLlocal1(caml_x);
    caml_x = caml_alloc_tuple(0);
    CAMLreturn(caml_x)
  }
  
  libsql_rows* caml_libsql_rows_of_value(struct value* caml_x) {
    libsql_rows* x = malloc(sizeof(struct libsql_rows));
    caml_x = caml_alloc_tuple(0);
    CAMLreturn(caml_x)
  }
  
  value caml_libsql_rows_to_value(struct libsql_rows* x) {
    CAMLparam0();
    CAMLlocal1(caml_x);
    caml_x = caml_alloc_tuple(0);
    CAMLreturn(caml_x)
  }
  
  libsql_rows_future* caml_libsql_rows_future_of_value(struct value* caml_x) {
    libsql_rows_future* x = malloc(sizeof(struct libsql_rows_future));
    caml_x = caml_alloc_tuple(0);
    CAMLreturn(caml_x)
  }
  
  value caml_libsql_rows_future_to_value(struct libsql_rows_future* x) {
    CAMLparam0();
    CAMLlocal1(caml_x);
    caml_x = caml_alloc_tuple(0);
    CAMLreturn(caml_x)
  }
  
  libsql_stmt* caml_libsql_stmt_of_value(struct value* caml_x) {
    libsql_stmt* x = malloc(sizeof(struct libsql_stmt));
    caml_x = caml_alloc_tuple(0);
    CAMLreturn(caml_x)
  }
  
  value caml_libsql_stmt_to_value(struct libsql_stmt* x) {
    CAMLparam0();
    CAMLlocal1(caml_x);
    caml_x = caml_alloc_tuple(0);
    CAMLreturn(caml_x)
  }
  
  
