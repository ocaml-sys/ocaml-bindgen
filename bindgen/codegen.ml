let with_file file fn =
  let oc = open_out file in
  let fmt = Format.formatter_of_out_channel oc in
  fn fmt;
  close_out oc;
  ()

let write_dune_file (dune: Dunefile.t) =
  with_file "dune" @@ fun fmt ->
  Format.fprintf fmt {|
; automatically generated by ocaml-bindgen 0.0.1
(library
 (name %s)
 (foreign_stubs
  (language c)
  (names %s)
  (flags
   (:standard -O2))))
|}
dune.lib_name
dune.c_file_name;
  Format.fprintf fmt "\r\n%!"

let write_caml_files caml (dune: Dunefile.t) =
  with_file dune.caml_file_name @@ fun fmt ->
  Format.fprintf fmt "(* automatically generated by ocaml-bindgen 0.0.1 *)\r\n";
  Format.fprintf fmt "%a\r\n%!" Pprintast.structure caml

let write_c_files (c: Clang.Ast.translation_unit) (dune: Dunefile.t) =
  with_file dune.c_file_name @@ fun fmt ->
  Format.fprintf fmt "/* automatically generated by ocaml-bindgen 0.0.1 */\r\n";
  Format.fprintf fmt "%s\r\n%!" (Format.asprintf "%a" Clang.Printer.translation_unit c)
